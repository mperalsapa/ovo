@use "variables.scss" as vars;

.noise {
    position: fixed;
    top: -50%;
    left: -50%;
    right: -50%;
    bottom: -50%;
    width: 200%;
    height: 200vh;
    pointer-events: none;
    background: transparent url('http://assets.iceable.com/img/noise-transparent.png') repeat 0 0;
    animation: bg-animation .2s infinite;
    background-repeat: repeat;
    opacity: .9;
    // background: transparent url('/ovo/assets/images/vhs_noise.gif') repeat 0 0;
    // opacity: .1;
    visibility: visible;
    z-index: -1;
}

@keyframes bg-animation {
    0% {
        transform: translate(0, 0)
    }

    10% {
        transform: translate(-5%, -5%)
    }

    20% {
        transform: translate(-10%, 5%)
    }

    30% {
        transform: translate(5%, -10%)
    }

    40% {
        transform: translate(-5%, 15%)
    }

    50% {
        transform: translate(-10%, 5%)
    }

    60% {
        transform: translate(15%, 0)
    }

    70% {
        transform: translate(0, 10%)
    }

    80% {
        transform: translate(-15%, 0)
    }

    90% {
        transform: translate(10%, 5%)
    }

    100% {
        transform: translate(5%, 0)
    }
}

.backgroundGradient {
    position: fixed;
    top: 0;
    left: 0;
    background: radial-gradient(ellipse at top, #424242 0%, #0f0f0f 100%);
    width: 100vw;
    height: 100vh;
    z-index: -1;
}

.scanLines {
    z-index: -1;
    opacity: 0.13;
    /* OPACIDAD SCANLINES */
    width: 100%;
    height: 100%;
    pointer-events: none;
    position: fixed;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(to bottom, transparent 50%, rgba(0, 0, 0, .5) 50%);
    background-size: 100% 6px;
}

// If body contains header, we assign the header height
// to the top of the gradient
body:has(header) .verticalGradient {
    top: #{vars.$header-height}
}

body:not(:has(header)) .verticalGradient {
    top: 0;
}

.verticalGradient {
    position: fixed;
    pointer-events: none;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: -1;
    background: linear-gradient(0deg, rgba(0, 0, 0, 0.75) 0%, rgba(0, 0, 0, 0.5) 2%, rgba(0, 0, 0, 0) 6%, rgba(0, 0, 0, 0) 94%, rgba(0, 0, 0, 0.5) 98%, rgba(0, 0, 0, 0.75) 100%);
}