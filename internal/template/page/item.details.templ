package page

import "ovo-server/internal/model"
import "ovo-server/internal/template/shared"
import "ovo-server/internal/session"
import "strconv"
import "ovo-server/internal/template/component"
import "fmt"

type ItemDetailsPageData struct {
	Item        model.Item
	UserSession session.UserSession
}

templ castList(item model.Item) {
	for _, credit := range item.GetCast() {
		@component.VerticalCardTitleSubtitle(component.VerticalCardTitleSubtitleData{
			CardTitle:    credit.Person.Name,
			CardSubtitle: fmt.Sprintf("as %s", credit.Role),
			ImagePath:    "https://image.tmdb.org/t/p/w500" + credit.Person.ProfilePath,
		})
	}
}

templ ItemDetailsPage(pageData ItemDetailsPageData) {
	@shared.UserPage(shared.UserPageData{
		Title:       pageData.Item.Title,
		UserSession: pageData.UserSession,
	}) {
		<div class="flex flex-col lg:flex-row items-start gap-8 item-container">
			<img class="item-image mx-auto" src={ "https://image.tmdb.org/t/p/w500" + pageData.Item.PosterPath }/>
			<div class="flex flex-col gap-8 overflow-x-hidden w-full">
				<div class="flex flex-col gap-2">
					<h1 class="">{ pageData.Item.Title }</h1>
					if pageData.Item.Title != pageData.Item.OriginalTitle {
						<h2 class="">{ pageData.Item.OriginalTitle }</h2>
					}
					<div class="flex gap-6 details">
						<span>
							{ strconv.Itoa(pageData.Item.ReleaseDate.Year()) }
						</span>
						<span>
							1h 59m
						</span>
						<div>
							<span>
								7.6
							</span>
							<span class="material-symbols-outlined inline-icon">
								star
							</span>
						</div>
						<span>
							Ends at 21:00
						</span>
					</div>
				</div>
				if pageData.Item.TagLine != "" {
					<h2>{ pageData.Item.TagLine }</h2>
				}
				<p>
					{ pageData.Item.Description }
				</p>
				<div class="flex flex-col gap-4">
					if directors := pageData.Item.GetDirectors(); len(directors) > 0 {
						<div>
							<h3 class="font-bold">Directors</h3>
							<div class="flex">
								for _, director := range directors {
									<span class="comma-separated">{ director.Person.Name }</span>
								}
							</div>
						</div>
					}
					if writers := pageData.Item.GetWriters(); len(writers) > 0 {
						<div>
							<h3 class="font-bold">Writers</h3>
							<div class="flex">
								for _, writer := range writers {
									<span class="comma-separated">{ writer.Person.Name }</span>
								}
							</div>
						</div>
					}
				</div>
				@component.HorizontalCarrousel() {
					@castList(pageData.Item)
					// <div>
					// 	hola
					// </div>
				}
			</div>
		</div>
	}
}
