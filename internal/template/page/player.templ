package page

import (
	"ovo-server/internal/session"
	"ovo-server/internal/model"
	"ovo-server/internal/template/shared"
	"ovo-server/internal/router"
	"fmt"
	"strconv"
)

type PlayerData struct {
	UserSession session.UserSession
	Item        model.Item
}

type MissingItemModalData struct {
	Title             string
	Message           string
	ConfirmButtonText string
	RedirectRoute     string
}

script MissingItemModal(ModalData MissingItemModalData) {
	Swal.fire({
		icon: 'error',
		title: 'There is no current item playing!',
		text: ModalData.Message,
		// showConfirmButton: false,
		confirmButtonText: ModalData.ConfirmButtonText,
		buttonsStyling: false,
		scrollbarPadding: false,
		customClass: {
    	confirmButton: "button button-primary"
  }
	}).then(() => {
		window.location.href = ModalData.RedirectRoute
	})
}

script TestScript(message string) {
	console.log(message)
}

templ Player(PageData PlayerData) {
	@shared.Page("Player") {
		<div class="w-screen h-screen relative">
			<video class="w-screen h-screen bg-black" data-enabledSyncplay={ strconv.FormatBool(PageData.UserSession.SyncPlayGroup != "") } src={ router.GenerateDownloadItemRoute(PageData.Item.ID) }></video>
			<div class="w-full top-0 absolute px-10 pt-5 flex justify-between">
				<div class="flex gap-3">
					<button class="close-video-iframe"><span class="material-symbols-outlined inline-icon">arrow_back</span></button>
					<span>{ fmt.Sprintf("%s (%d)", PageData.Item.Title, PageData.Item.ReleaseDate.Year()) }</span>
				</div>
				<div class="flex gap-3">
					<button><span class="material-symbols-outlined inline-icon">groups</span></button>
					<button><span class="material-symbols-outlined inline-icon">cast</span></button>
				</div>
			</div>
			<div class="w-full bottom-0 absolute px-10 pb-5 flex flex-col">
				<div class="w-full flex mb-3">
					<span id="current-time">2:54:39</span>
					<input type="range" id="progress-control" class="flex-grow mx-5" max="1000" value="0"/>
					<span id="duration">2:59:42</span>
				</div>
				<div class="w-full flex justify-between">
					<div class="flex gap-3">
						<button><span class="material-symbols-outlined inline-icon">skip_previous</span></button>
						<button><span class="material-symbols-outlined inline-icon">navigate_before</span></button>
						<button id="rewind" class="hidden-48"><span class="material-symbols-outlined inline-icon">fast_rewind</span></button>
						<button id="play"><span class="material-symbols-outlined inline-icon">play_arrow</span></button>
						<button id="forward" class="hidden-48"><span class="material-symbols-outlined inline-icon">fast_forward</span></button>
						<button><span class="material-symbols-outlined inline-icon">navigate_next</span></button>
						<button><span class="material-symbols-outlined inline-icon">skip_next</span></button>
						<span class="hidden-44">Ends at <span id="ends-at">00:00</span></span>
					</div>
					<div class="flex gap-3">
						<div class="flex hidden-34">
							<button id="mute"><span class="material-symbols-outlined inline-icon" id="volume-icon">volume_up</span></button>
							<input type="range" id="volume-control" min="0" max="1" step="0.01"/>
						</div>
						<button><span class="material-symbols-outlined inline-icon">settings</span></button>
						<button><span class="material-symbols-outlined inline-icon">picture_in_picture_alt</span></button>
						<button id="full-screen"><span class="material-symbols-outlined inline-icon">fullscreen</span></button>
					</div>
				</div>
			</div>
		</div>
		if PageData.Item.ID == 0 {
			@TestScript("Hello")
			if PageData.UserSession.SyncPlayGroup != "" {
				@MissingItemModal(MissingItemModalData{
					Title:             "There is no current item playing!",
					Message:           "Go to a library and find something to watch. üçøüòä",
					ConfirmButtonText: "Go Home",
					RedirectRoute:     router.Routes.Home,
				})
			} else {
				@MissingItemModal(MissingItemModalData{
					Title:             "Item not found!",
					Message:           "Requested item was not found or has been removed.",
					ConfirmButtonText: "Go Home",
					RedirectRoute:     router.Routes.Home,
				})
			}
		}
	}
}
